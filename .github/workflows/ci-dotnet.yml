name: 'CI - .NET'

on:
  workflow_dispatch:

  schedule:
    - cron: '10 9,21 * * *'

  push:

  pull_request:

jobs:
  # check_workflow:
  #   permissions:
  #     contents: none
  #   uses: ./.github/workflows/should-workflow-run.yml
  #   with:
  #     bazel-target-prefix: '//dotnet'

  browser:
    # if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[dotnet]') == true }}
    # needs: check_workflow
    runs-on: 'windows-latest'
    strategy:
      fail-fast: false
      matrix:
        driver: [ Chrome, Firefox ]
        framework: [ net6.0, net48, netcoreapp3.1 ]
        include:
          - driver: Chrome
            location: 'C:\SeleniumWebDrivers\ChromeDriver'
          - driver: Firefox
            location: 'C:\SeleniumWebDrivers\GeckoDriver'
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
      - name: Setup Bazel
        uses: ./.github/actions/setup-bazel
        with:
          bazelisk-cache: true
          disk-cache: dotnet-${{ matrix.driver }}-${{ matrix.framework }}
          external-cache: |
            crates: rust/Cargo.Bazel.lock
            go_sdk: WORKSPACE
            nodejs_*: WORKSPACE
            npm: package-lock.json
            pypi__pip: py/requirements_lock.txt
            python_3_*: WORKSPACE
            remote_java_tools: WORKSPACE
            remotejdk11_*: WORKSPACE
            rules_ruby_dist: rb/ruby_version.bzl
            rules_rust: WORKSPACE
            rust_*_tools: WORKSPACE
          repository-cache: true
      - name: Setup dotnet tests
        run: bazel build //dotnet/test/common:chrome
      - name: Run ${{ matrix.driver }} tests
        working-directory: dotnet
        run: dotnet test test/common/WebDriver.Common.Tests.csproj --framework ${{ matrix.framework }}
        env:
          ACTIVE_DRIVER_CONFIG: ${{ matrix.driver }}
          DRIVER_SERVICE_LOCATION: ${{ matrix.location }}
