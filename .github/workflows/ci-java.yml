# Configuration for Java CI
# To force the execution of this workflow, add [run java] to your commit message
name: 'CI - Java'

on:
  workflow_dispatch:

  schedule:
    - cron: '15 9,21 * * *'

  push:

  pull_request:

env:
  NODE_VERSION: '16.x'

jobs:
  # check_workflow:
  #   permissions:
  #     contents: none
  #   uses: ./.github/workflows/should-workflow-run.yml
  #   with:
  #     bazel-target-prefix: '//java'

  build:
    # if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[java]') == true }}
    # needs: check_workflow
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v3
      - name: Setup Bazel
        uses: ./.github/actions/setup-bazel
        with:
          bazelisk-cache: true
          disk-cache: java
          external-cache: |
            crates: rust/Cargo.Bazel.lock
            go_sdk: WORKSPACE
            nodejs_*: WORKSPACE
            npm: package-lock.json
            pypi__pip: py/requirements_lock.txt
            python_3_*: WORKSPACE
            remote_java_tools: WORKSPACE
            remotejdk11_*: WORKSPACE
            rules_ruby_dist: rb/ruby_version.bzl
            rules_rust: WORKSPACE
            rust_*_tools: WORKSPACE
          repository-cache: true
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Build grid
        run: bazel build grid

  small_tests:
    # if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[run java]') == true }}
    # needs: [ check_workflow, build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Bazel
        uses: ./.github/actions/setup-bazel
        with:
          bazelisk-cache: true
          disk-cache: java
          external-cache: |
            crates: rust/Cargo.Bazel.lock
            go_sdk: WORKSPACE
            nodejs_*: WORKSPACE
            npm: package-lock.json
            pypi__pip: py/requirements_lock.txt
            python_3_*: WORKSPACE
            remote_java_tools: WORKSPACE
            remotejdk11_*: WORKSPACE
            rules_ruby_dist: rb/ruby_version.bzl
            rules_rust: WORKSPACE
            rust_*_tools: WORKSPACE
          repository-cache: true
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Run small tests
        run: bazel test --test_tag_filters "small,-lint" //java/...
      - name: Sonar Scanner
        uses: ./.github/actions/sonar-cloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  medium_tests:
    # if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[run java]') == true }}
    # needs: [ check_workflow, small_tests ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Bazel
        uses: ./.github/actions/setup-bazel
        with:
          bazelisk-cache: true
          disk-cache: java
          external-cache: |
            crates: rust/Cargo.Bazel.lock
            go_sdk: WORKSPACE
            nodejs_*: WORKSPACE
            npm: package-lock.json
            pypi__pip: py/requirements_lock.txt
            python_3_*: WORKSPACE
            remote_java_tools: WORKSPACE
            remotejdk11_*: WORKSPACE
            rules_ruby_dist: rb/ruby_version.bzl
            rules_rust: WORKSPACE
            rust_*_tools: WORKSPACE
          repository-cache: true
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Run medium tests
        run: bazel test --test_tag_filters "medium,-lint" --flaky_test_attempts 3 //java/...

  lint:
    # if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[run java]') == true }}
    # needs: [ check_workflow, build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v3
      - name: Setup Bazel
        uses: ./.github/actions/setup-bazel
        with:
          bazelisk-cache: true
          disk-cache: java
          external-cache: |
            crates: rust/Cargo.Bazel.lock
            go_sdk: WORKSPACE
            nodejs_*: WORKSPACE
            npm: package-lock.json
            pypi__pip: py/requirements_lock.txt
            python_3_*: WORKSPACE
            remote_java_tools: WORKSPACE
            remotejdk11_*: WORKSPACE
            rules_ruby_dist: rb/ruby_version.bzl
            rules_rust: WORKSPACE
            rust_*_tools: WORKSPACE
          repository-cache: true
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Run linter
        run: bazel test --test_tag_filters "lint,-no-lint" //java/...

  browser_tests:
    # if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[run java]') == true }}
    # needs: [ check_workflow, small_tests ]
    needs: [ small_tests ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { "browser": "firefox", "version": "latest" }
          - { "browser": "firefox", "version": "latest-beta" }
          - { "browser": "firefox", "version": "latest-devedition" }
          - { "browser": "chrome", "version": "stable" }
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v3
      - name: Setup Bazel
        uses: ./.github/actions/setup-bazel
        with:
          bazelisk-cache: true
          disk-cache: java
          external-cache: |
            crates: rust/Cargo.Bazel.lock
            go_sdk: WORKSPACE
            nodejs_*: WORKSPACE
            npm: package-lock.json
            pypi__pip: py/requirements_lock.txt
            python_3_*: WORKSPACE
            remote_java_tools: WORKSPACE
            remotejdk11_*: WORKSPACE
            rules_ruby_dist: rb/ruby_version.bzl
            rules_rust: WORKSPACE
            rust_*_tools: WORKSPACE
          repository-cache: true
      - name: Setup Fluxbox
        run: sudo apt-get -y install fluxbox
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Setup Firefox
        uses: abhi1693/setup-browser@v0.3.4
        with:
          browser: firefox
          version: ${{ matrix.version }}
        if: |
          matrix.browser == 'firefox'
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@latest
        with:
          version: ${{ matrix.version }}
        if: |
          matrix.browser == 'chrome'
      - name: Start XVFB
        run: Xvfb :99 &
      - name: Start Fluxbox
        run: fluxbox -display :99 &
      - name: Run browser tests in ${{ matrix.browser }}
        run: bazel test --test_tag_filters "${{ matrix.browser }},-rc,-remote" --flaky_test_attempts 3 //java/...
        env:
          DISPLAY: :99

  server_tests:
    # if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[run java]') == true }}
    # needs: [ check_workflow, small_tests ]
    needs: [ small_tests ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { "browser": "firefox", "version": "latest" }
          - { "browser": "firefox", "version": "latest-beta" }
          - { "browser": "firefox", "version": "latest-devedition" }
          - { "browser": "chrome", "version": "stable" }
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v3
      - name: Setup Bazel
        uses: ./.github/actions/setup-bazel
        with:
          bazelisk-cache: true
          disk-cache: java
          external-cache: |
            crates: rust/Cargo.Bazel.lock
            go_sdk: WORKSPACE
            nodejs_*: WORKSPACE
            npm: package-lock.json
            pypi__pip: py/requirements_lock.txt
            python_3_*: WORKSPACE
            remote_java_tools: WORKSPACE
            remotejdk11_*: WORKSPACE
            rules_ruby_dist: rb/ruby_version.bzl
            rules_rust: WORKSPACE
            rust_*_tools: WORKSPACE
          repository-cache: true
      - name: Setup Fluxbox
        run: sudo apt-get -y install fluxbox
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Setup Firefox
        uses: abhi1693/setup-browser@v0.3.4
        with:
          browser: firefox
          version: ${{ matrix.version }}
        if: |
          matrix.browser == 'firefox'
      - name: Setup Chrome
        uses: browser-actions/setup-chrome@latest
        with:
          version: ${{ matrix.version }}
        if: |
          matrix.browser == 'chrome'
      - name: Start XVFB
        run: Xvfb :99 &
      - name: Start Fluxbox
        run: fluxbox -display :99 &
      - name: Run server tests
        run: bazel test --test_tag_filters "${{ matrix.browser }},remote" --flaky_test_attempts 3 //java/...
        env:
          DISPLAY: :99

  rc_tests:
    # if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[run java]') == true }}
    # needs: [ check_workflow, small_tests ]
    needs: [ small_tests ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v3
      - name: Setup Bazel
        uses: ./.github/actions/setup-bazel
        with:
          bazelisk-cache: true
          disk-cache: java
          external-cache: |
            crates: rust/Cargo.Bazel.lock
            go_sdk: WORKSPACE
            nodejs_*: WORKSPACE
            npm: package-lock.json
            pypi__pip: py/requirements_lock.txt
            python_3_*: WORKSPACE
            remote_java_tools: WORKSPACE
            remotejdk11_*: WORKSPACE
            rules_ruby_dist: rb/ruby_version.bzl
            rules_rust: WORKSPACE
            rust_*_tools: WORKSPACE
          repository-cache: true
      - name: Setup Fluxbox
        run: sudo apt-get -y install fluxbox
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Setup Firefox
        uses: abhi1693/setup-browser@v0.3.4
        with:
          browser: firefox
          version: latest
        if: |
          matrix.browser == 'firefox'
      - name: Start XVFB
        run: Xvfb :99 &
      - name: Start Fluxbox
        run: fluxbox -display :99 &
      - name: Run browser tests in Firefox
        run: bazel test --test_tag_filters "rc" --flaky_test_attempts 3 //java/...
        env:
          DISPLAY: :99

  javadoc:
    # if: ${{ needs.check_workflow.outputs.result == 'true' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || contains(toJson(github.event.commits), '[run java]') == true }}
    # needs: [ check_workflow, build ]
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source tree
        uses: actions/checkout@v3
      - name: Setup Bazel
        uses: ./.github/actions/setup-bazel
        with:
          bazelisk-cache: true
          disk-cache: java
          external-cache: |
            crates: rust/Cargo.Bazel.lock
            go_sdk: WORKSPACE
            nodejs_*: WORKSPACE
            npm: package-lock.json
            pypi__pip: py/requirements_lock.txt
            python_3_*: WORKSPACE
            remote_java_tools: WORKSPACE
            remotejdk11_*: WORKSPACE
            rules_ruby_dist: rb/ruby_version.bzl
            rules_rust: WORKSPACE
            rust_*_tools: WORKSPACE
          repository-cache: true
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Generate javadoc
        run: |
          ./go --verbose javadocs
